name: Build

on:
  workflow_dispatch:
    inputs:
      configuration:
        description: 'Build Configuration (Debug/Release)'
        required: false
        default: 'Debug'
  push:
    tags:
      - "v*"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    outputs:
      is_prerelease: ${{ steps.config.outputs.is_prerelease }}
      artifact_name: ${{ steps.config.outputs.artifact_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      - name: Set configuration
        id: config
        run: |
          config="${{ github.event.inputs.configuration || 'Debug' }}"
          prerelease="false"

          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            config="Release"
            # Check if tag has a suffix (like -dev, -alpha, etc.)
            if [[ "${{ github.ref_name }}" =~ .*-.* ]]; then
              prerelease="true"
            fi
          fi

          echo "config=${config}" >> $GITHUB_ENV
          echo "is_prerelease=${prerelease}" >> $GITHUB_OUTPUT
          echo "artifact_name=windows-build-x64-${config}" >> $GITHUB_ENV
          echo "artifact_name=windows-build-x64-${config}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build WinDivert
        run: scripts/build-windivert.ps1 ${{ env.config }}

      - name: Build WDNA
        run: scripts/build-wdna.ps1 ${{ env.config }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: |
            output/x64/${{ env.config }}/*.exe
            output/x64/${{ env.config }}/*.dll
            output/x64/${{ env.config }}/*.sys
          retention-days: 7

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }}

      - name: Zip files for release
        run: zip -r ${{ needs.build.outputs.artifact_name }}.zip .

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          prerelease: ${{ needs.build.outputs.is_prerelease == 'true' }}
          fail_on_unmatched_files: true
          files: "*.zip"
